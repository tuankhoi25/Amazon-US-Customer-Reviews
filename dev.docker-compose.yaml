services:
  postgres:
    container_name: postgres
    image: postgres:14
    env_file: .env
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d postgres']
      interval: 10s
      timeout: 8s
      retries: 5

  minio:
    container_name: minio
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    env_file: .env
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio-init:
    container_name: minio-init
    image: minio/mc:latest
    entrypoint: |
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc anonymous set public minio/warehouse;
      "
    depends_on:
      minio:
        condition: service_healthy

  nessie:
    container_name: nessie
    image: ghcr.io/projectnessie/nessie:0.103.3
    depends_on:
      minio-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    # environment:
    #   - nessie.version.store.type=IN_MEMORY
    #   - nessie.server.authentication.enabled=false
    #   - nessie.catalog.default-warehouse=warehouse
    #   - nessie.catalog.warehouses.warehouse.location=s3a://warehouse/
    #   - nessie.catalog.service.s3.default-options.region=us-east-1
    #   - nessie.catalog.service.s3.default-options.path-style-access=true
    #   - nessie.catalog.service.s3.default-options.access-key=urn:nessie-secret:quarkus:nessie.catalog.secrets.access-key
    #   - nessie.catalog.secrets.access-key.name=minioadmin
    #   - nessie.catalog.secrets.access-key.secret=minioadmin
    #   - nessie.catalog.service.s3.default-options.endpoint=http://minio:9000/
    #   - nessie.catalog.service.s3.default-options.external-endpoint=http://127.0.0.1:9002/
    ports:
      - 19120:19120

  spark-master:
    container_name: spark-master
    hostname: spark-master
    image: apache/spark:3.5.0-scala2.12-java11-python3-r-ubuntu
    command: >
      /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master
    env_file: .env
    ports:
      - 4040:4040
      - 8080:8080
      - 7077:7077

  spark-worker-1:
    container_name: spark-worker-1
    image: apache/spark:3.5.0-scala2.12-java11-python3-r-ubuntu
    command: >
      /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    env_file: .env

  notebook:
    container_name: notebook
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8888:8888
    env_file: .env
    depends_on:
      - spark-master
    volumes:
      - ./notebooks:/app

volumes:
  minio_data:
    name: minio_data
  postgres_data:
    name: postgres_data

networks:
  default:
    name: common-net
    external: true